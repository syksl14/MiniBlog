@model MiniBlog.Models.UserModel
@using (Html.BeginForm("Add", "User"))
{
    <div class="modal-body">
        @if (ViewData.ModelState[""] != null && ViewData.ModelState[""].Errors.Count > 0)
        {
            <div class="alert alert-danger">
                <button type="button" class="close" data-dismiss="alert">×</button>
                @Html.ValidationSummary(true, "")
            </div>
        }
        <div class="form-group">
            @Html.LabelFor(m => m.AuthorityLevel)
            @Html.DropDownListFor(m => m.AuthorityLevel, ViewBag.Levels as SelectList, "Seçiniz", new { @class = "form-control" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Email)
            @Html.TextBoxFor(m => m.Email, new { @class = "form-control", required = "required", type = "email" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Name)
            @Html.TextBoxFor(m => m.Name, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Surname)
            @Html.TextBoxFor(m => m.Surname, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group">
            @Html.LabelFor(m => m.Password)
            @Html.PasswordFor(m => m.Password, new { @class = "form-control", required = "required" })
        </div>
        <div class="form-group" for="file">
            <label for="file">Profil Fotoğrafı</label>
            <input type="file" name="file" id="file" class="form-control" />
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Kapat</button>
        <button type="submit" class="btn btn-success">Kaydet</button>
    </div>
}

